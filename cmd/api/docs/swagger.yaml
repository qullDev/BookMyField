basePath: /api/v1
definitions:
  controllers.CreateBookingInput:
    properties:
      end_time:
        type: string
      field_id:
        type: string
      start_time:
        type: string
    required:
    - end_time
    - field_id
    - start_time
    type: object
  controllers.CreateCheckoutSessionRequest:
    properties:
      booking_id:
        type: string
    required:
    - booking_id
    type: object
  models.Booking:
    properties:
      created_at:
        type: string
      end_time:
        type: string
      field:
        $ref: '#/definitions/models.Field'
      field_id:
        type: string
      id:
        type: string
      payments:
        items:
          $ref: '#/definitions/models.Payment'
        type: array
      start_time:
        type: string
      status:
        description: pending, confirmed, canceled
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: string
    type: object
  models.Field:
    properties:
      created_at:
        type: string
      id:
        type: string
      location:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  models.Payment:
    properties:
      amount:
        type: number
      booking:
        $ref: '#/definitions/models.Booking'
      booking_id:
        type: string
      created_at:
        type: string
      currency:
        type: string
      id:
        type: string
      status:
        description: pending, paid, failed
        type: string
      stripe_ref_id:
        description: session ID atau payment intent ID
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      creadtedAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        description: user or admin
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a server for BookMyField application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: BookMyField API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Log in a user with email and password
      parameters:
      - description: Login Info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Log in a user
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Log out a user by blacklisting access token and deleting refresh
        token
      parameters:
      - description: Refresh Token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Log out a user
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token using a refresh token
      parameters:
      - description: Refresh Token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with name, email, and password
      parameters:
      - description: User Info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - auth
  /bookings:
    get:
      description: Get a list of all bookings. Requires admin privileges.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Booking'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all bookings (Admin only)
      tags:
      - bookings
    post:
      consumes:
      - application/json
      description: Create a new booking for a field.
      parameters:
      - description: Booking Info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateBookingInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new booking
      tags:
      - bookings
  /bookings/{id}/cancel:
    delete:
      description: Cancel a booking by its ID.
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Cancel a booking
      tags:
      - bookings
  /bookings/me:
    get:
      description: Get a list of bookings for the currently authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Booking'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get my bookings
      tags:
      - bookings
  /fields:
    get:
      description: Get a list of all fields with optional filtering
      parameters:
      - description: Location
        in: query
        name: location
        type: string
      - description: Minimum Price
        in: query
        name: min_price
        type: number
      - description: Maximum Price
        in: query
        name: max_price
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Field'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all fields
      tags:
      - fields
  /fields/{id}:
    get:
      description: Get a single field by its ID
      parameters:
      - description: Field ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Field'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get a field by ID
      tags:
      - fields
  /fields/admin:
    post:
      consumes:
      - application/json
      description: Create a new field. Requires admin privileges.
      parameters:
      - description: Field Info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Field'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Field'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new field (Admin only)
      tags:
      - fields
  /fields/admin/{id}:
    delete:
      description: Delete a field by its ID. Requires admin privileges.
      parameters:
      - description: Field ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Delete a field (Admin only)
      tags:
      - fields
    put:
      consumes:
      - application/json
      description: Update an existing field. Requires admin privileges.
      parameters:
      - description: Field ID
        in: path
        name: id
        required: true
        type: string
      - description: Field Info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Field'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Field'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a field (Admin only)
      tags:
      - fields
  /payments/create-checkout-session:
    post:
      consumes:
      - application/json
      description: Create a new checkout session for a booking.
      parameters:
      - description: Booking ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateCheckoutSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a checkout session
      tags:
      - payments
  /payments/stripe-webhook:
    post:
      consumes:
      - application/json
      description: Handle Stripe webhook events to update payment status.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Stripe webhook
      tags:
      - payments
schemes:
- http
swagger: "2.0"
